# Configuration file for Synapse.
#
# This is a YAML file: see [1] for a quick introduction. Note in particular
# that *indentation is important*: all the elements of a list or dictionary
# should have the same indentation.
#
# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html
#
# For more information on how to configure Synapse, including a complete accounting of
# each option, go to docs/usage/configuration/config_documentation.md or
# https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html
server_name: "${EE_HOSTNAME}"
pid_file: /data/homeserver.pid
listeners:
  - port: 8008
    tls: false
    type: http
    x_forwarded: true
    resources:
      - names: [${NAMES}]
        compress: false
database:
  name: psycopg2
  args:
    user: synapse_user
    password: ${SYNAPSE_USER_DATABASE_PASSWORD}
    database: synapse
    host: postgres
    cp_min: 5
    cp_max: 10
email:
  smtp_host: postfix
  notif_from: "Matrix <noreply@${EE_HOSTNAME}>"
retention:
  enabled: true
  default_policy:
    min_lifetime: 30d
    max_lifetime: 92d
  allowed_lifetime_min: 60d
  allowed_lifetime_max: 184d
media_retention:
    local_media_lifetime: 90d
    remote_media_lifetime: 30d
media_store_path: /data/media_store
report_stats: false
# If this file does not exist, Synapse will create a new signing key on startup and store it in this file.
signing_key_path: "/site/data/${EE_HOSTNAME}.signing.key"
public_baseurl: "https://${EE_HOSTNAME}"
# Authentication settings
password_config:
  enabled: false
enable_registration: false
sso:
  client_whitelist:
    - https://${EE_HOSTNAME}/chat
oidc_providers:
  - idp_id: keycloak
    idp_name: "Elexis-Environment"
    issuer: "https://${EE_HOSTNAME}/keycloak/auth/realms/ElexisEnvironment"
    client_id: "synapse"
    client_secret: "${SYNAPSE_CLIENT_SECRET}"
    user_mapping_provider:
      config:
        localpart_template: "{{ user.preferred_username }}"
        display_name_template: "{{ user.name }}"
        email_template: "{{ user.email }}"
    backchannel_logout_enabled: true
jwt_config:
    enabled: true
    issuer: "https://${EE_HOSTNAME}/keycloak/auth/realms/ElexisEnvironment"
    algorithm: RS256
    secret: |
      -----BEGIN PUBLIC KEY-----
      ${REALM_PUBLIC_KEY}
      -----END PUBLIC KEY-----
    subject_claim: "preferred_username"
    display_name_claim: "name"
    audiences:
        - "synapse"
session_lifetime: 1d
# https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html#user_directory
user_directory:
  enabled: true
  search_all_users: true
  prefer_local_users: true
auto_join_rooms:
  - "#general:${EE_HOSTNAME}"
autocreate_auto_join_rooms: true
autocreate_auto_join_rooms_federated: false
# Disable presence tracking, which is currently fairly resource intensive
# More info: https://github.com/matrix-org/synapse/issues/9478
use_presence: false
# Set a small complexity limit, preventing users from joining large rooms
# which may be resource-intensive to remain a part of.
#
# Note that this will not prevent users from joining smaller rooms that
# eventually become complex.
limit_remote_rooms:
  enabled: true
  complexity: 3.0
#
# https://github.com/matrix-org/synapse-s3-storage-provider
#
# Configuration for media storage providers
media_storage_providers:
  - module: s3_storage_provider.S3StorageProviderBackend
    store_local: True 
    store_remote: True
    store_synchronous: True
    config:
      bucket: ${MATRIX_S3_BUCKET_NAME}
      endpoint_url: ${MATRIX_S3_LIKE_SERVICE_ENDPOINT_URL}
      access_key_id: ${MATRIX_S3_ACCESS_KEY_ID}
      secret_access_key: ${MATRIX_S3_ACCESS_KEY_SECRET}
      verify: false
      prefix: "synapse/"
      threadpool_size: 20
federation_domain_whitelist:
  - medelexis.ch
  - myelexis.ch

# vim:ft=yaml